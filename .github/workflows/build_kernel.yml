# MIT License
#
# Copyright (c) 2022 David Schall and EASE Lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Build Linux Kernel

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#   push:
#     branches: [main]
# #     paths:
# #       - "scripts/build_kernel.sh"

#   pull_request:
# #     branches: [main]
# #     paths:
# #       - "scripts/build_kernel.sh"

env:
  KERNEL_DIR: linux
  KVERSION: 5.4.84

jobs:
  build-x86-64:
    name: Build kernel for x86
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: "true"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make git exuberant-ctags bc libssl-dev

      - name: Clone Kernel repo from kernel.org
        run: |
          git clone -v https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git ${{ env.KERNEL_DIR }}

      - name: Checkout version v5.x
        working-directory: ${{ env.KERNEL_DIR }}
        run: git checkout v${{ env.KVERSION }}

      - name: Configure and build
        working-directory: ${{ env.KERNEL_DIR }}
        run: |
          cp ../configs/linux-${{ env.KVERSION }}.config .config
          make -j $(nproc)
