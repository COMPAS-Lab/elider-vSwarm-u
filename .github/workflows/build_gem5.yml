# MIT License
#
# Copyright (c) 2022 David Schall and EASE Lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Build Gem5

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  push:
    branches: [main, ci-pipelines]
# #     paths:
# #       - "scripts/build_kernel.sh"

#   pull_request:
# #     branches: [main]
# #     paths:
# #       - "scripts/build_kernel.sh"

env:
  GEM5_DIR: gem5
  ARCH: X68

jobs:
  build-x86-64:
    name: Build kernel for x86
#     runs-on: ubuntu-20.04
    runs-on: test-runner
    strategy:
      fail-fast: false
      
      matrix:
        arch: [X86]

    steps:

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y  \ 
                  build-essential git m4 scons zlib1g zlib1g-dev \
                  libprotobuf-dev protobuf-compiler libprotoc-dev libgoogle-perftools-dev \
                  python3-dev python3-six python-is-python3 libboost-all-dev pkg-config

#       - name: Check out code
#         uses: actions/checkout@v2

      - name: Clone Kernel repo from kernel.org
        run: |
          git clone https://gem5.googlesource.com/public/gem5 ${{ env.KERNEL_DIR }}

      - name: Build Gem5
        working-directory: ${{ env.GEM5_DIR }}
        run: scons build/${{ matrix.arch }}/gem5.opt -j $(nproc)
        
        
      - name: Build the terminal
        working-directory: ${{ env.GEM5_DIR }}/util/term
        run: make
        
      - name: Build utils
        working-directory: ${{ env.GEM5_DIR }}/util/m5
        run: |
          if [ ${{ matrix.arch }} == X86 ]; then ARCH=x86; fi
          scons build/$ARCH/out/m5

