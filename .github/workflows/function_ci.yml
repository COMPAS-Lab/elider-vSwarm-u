# MIT License
#
# Copyright (c) 2022 EASE lab, University of Edinburgh
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: David Schall

name: Function CI for gem5 Simulator

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

  push:
    branches: [main]
    paths:
      - "test/**"
      - "gem5utils/**"

  pull_request:
    branches: [main]
    paths:
      - "test/**"
      - "gem5utils/**"

env:
  WORKING_DIR: wkdir/test/

jobs:
  emulator-function-test:
    name: Test function on emulator
    # For running the qe
    runs-on: [self-hosted, qemu-test]
    strategy:
      fail-fast: true

    env:
      FUNCTIONS_UNDER_TEST: "fibonacci-go fibonacci-nodejs fibonacci-python aes-go aes-nodejs aes-python auth-go auth-nodejs auth-python"
      MAKEFILE: test/emu_test.Makefile

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create the working directory to run the test.
        run: |
          make -f ${{ env.MAKEFILE }} build

      - name: Run the actual test of the emulator.
        timeout-minutes: 5
        run: |
          make -f ${{ env.MAKEFILE }} run_test

      - name: Check the results file.
        run: |
          make -f ${{ env.MAKEFILE }} check

      - name: Clean disk to resources for simulator test.
        run: |
          make -f ${{ env.MAKEFILE }} save_disk

      - name: Clean everything.
        if: ${{ always() }}
        run: |
          make -f ${{ env.MAKEFILE }} clean


  simulator-function-test:
    name: Test function on Simulator
    # For running the qe
    runs-on: [self-hosted, gem5-test]
    needs: emulator-function-test
    strategy:
      fail-fast: true
      matrix:
        function: [fibonacci-go, fibonacci-nodejs, fibonacci-python, aes-go]

    env:
      FUNCTION: ${{ matrix.function }}
      MAKEFILE: test/sim_test.Makefile

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create the working directory to run the test.
        run: |
          make -f ${{ env.MAKEFILE }} build

      - name: Run the actual test of the simulator.
        timeout-minutes: 5
        run: |
          make -f ${{ env.MAKEFILE }} run_test

      - name: Check the results file.
        run: |
          make -f ${{ env.MAKEFILE }} check

      # - name: Clean everything.
      #   if: ${{ always() }}
      #   run: |
      #     make -f ${{ env.MAKEFILE }} clean
