# MIT License
#
# Copyright (c) 2022 EASE lab, University of Edinburgh
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: David Schall

name: Base Image Test

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

  push:
    branches: [main]
    paths:
      - "test/**"
      - "gem5utils/**"

  pull_request:
    branches: [main]
    paths:
      - "test/**"
      - "gem5utils/**"

env:
  WORKING_DIR: wkdir/test/
  ARTIFACTS_DIR: artifacts/
  KERNEL: artifacts/kernel
  DISK_PRE_TEST: artifacts/base-disk.img
  DISK_FINAL: artifacts/disk.img
  CHECKSUMS: artifacts/checksums
  CLIENT: artifacts/test-client

jobs:

  prepare-artifacts:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   # max-parallel: 2
    #   matrix:
    #     include:
    #       - name: vmlinux-amd64
    #         path: artifacts/kernel
    #       - name: disk-image-amd64
    #         path: artifacts/disk.img
    #       - name: test-client
    #         path: artifacts/test-client
    #       - name: checksums
    #         path: artifacts/checksums


    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Build Artifacts
        id: build-artifacts
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-1

      - name: Download Last Kernel
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_kernel.yml
          name: vmlinux-amd64
          path: tmp

      - name: Copy Artifacts
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          cp tmp/kernel ${{ env.KERNEL }}



      - name: Download Artifacts
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        run: |
          ./resources/artifacts.sh download-disk ${{ env.DISK_PRE_TEST }} test-disk-image-amd64
          ./resources/artifacts.sh download ${{ env.CLIENT }} test-client-amd64



  base-image-test:
    name: Test and Finalize Base Image
    runs-on: ubuntu-20.04
    needs: prepare-artifacts
    env:
      FUNCTIONS_UNDER_TEST: "fibonacci-go"
      MAKEFILE: test/emu_test.Makefile

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Build Artifacts pre test
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-1

      - name: Cache Build Artifacts pre test
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-2


      # - name: Download Last Kernel
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: build_kernel.yml
      #     name: vmlinux-amd64
      #     path: ${{ env.ARTIFACTS_DIR }}


      # # - name: Download untested Base Disk
      # #   uses: dawidd6/action-download-artifact@v2
      # #   with:
      # #     workflow: build_kernel.yml
      # #     name: base-disk-pre-test
      # #     path: ${{ env.DISK_PRE_TEST }}


      # # - name: Download 3
      # #   uses: dawidd6/action-download-artifact@v2
      # #   with:
      # #     workflow: build_kernel.yml
      # #     path: kernel

      # - name: Download Artifacts
      #   if: steps.build-artifacts.outputs.cache-hit != 'true'
      #   run: |
      #     ./resources/artifacts.sh download-disk ${{ env.DISK_PRE_TEST }} test-disk-image-amd64
      #     ./resources/artifacts.sh download ${{ env.CLIENT }} test-client-amd64



      ##### Setup Test #####
      - name: Install dependencies
        run: |
          make -f ${{ env.MAKEFILE }} dep_install


      - name: Create the working directory to run the test.
        env:
          KERNEL: ${{ env.KERNEL }}
          DISK: ${{ env.DISK_PRE_TEST }}
          TEST_CLIENT: ${{ env.CLIENT }}
        run: |
          make -f ${{ env.MAKEFILE }} build


      - name: Run the actual test of the emulator.
        timeout-minutes: 5
        run: |
          make -f ${{ env.MAKEFILE }} run_test


      - name: Check the results file.
        run: |
          make -f ${{ env.MAKEFILE }} check


      - name: Save the final disk image
        shell: bash
        env:
          OUTPUT: ${{ env.DISK_FINAL }}
        run: |
          make -f ${{ env.MAKEFILE }} save_output


      - name: Create checksums of artifacts
        shell: bash
        run: |
          shasum ${{ env.DISK_FINAL }} > ${{ env.CHECKSUMS }}
          shasum ${{ env.KERNEL }} >> ${{ env.CHECKSUMS }}
          shasum ${{ env.CLIENT }} >> ${{ env.CHECKSUMS }}


      - name: Clean everything.
        if: ${{ always() }}
        run: |
          make -f ${{ env.MAKEFILE }} clean

# [
#   {
#     "name": "vmlinux-amd64",
#     "path": ${{ env.KERNEL }}
#   },
#   {
#     "name": "disk-image-amd64",
#     "path": ${{ env.DISK_FINAL }}
#   },
#   {
#     "name": "disk-image-amd64.sums",
#     "path": ${{ env.CHECKSUMS }}
#   },
#   {
#     "name": "test-client",
#     "path": ${{ env.CLIENT }}
#   },
# ]

# [{ "name": "vmlinux-amd64","path": ${{ env.KERNEL }}},{"name": "disk-image-amd64","path": ${{ env.DISK_FINAL }}},{ "name": "disk-image-amd64.sums", "path": ${{ env.CHECKSUMS }}},{"name": "test-client","path": ${{ env.CLIENT }}}]



  upload-artifacts:
    runs-on: ubuntu-latest
    # if: needs.build-x86-64.outputs.ansible-matrix
    needs: base-image-test
    strategy:
      fail-fast: false
      # max-parallel: 2
      matrix:
        include:
          - name: vmlinux-amd64
            path: artifacts/kernel
          - name: disk-image-amd64
            path: artifacts/disk.img
          - name: test-client
            path: artifacts/test-client
          - name: checksums
            path: artifacts/checksums
          # - name: vmlinux-amd64
          #   path: ${{ env.KERNEL }}
          # - name: disk-image-amd64
          #   path: ${{ env.DISK_FINAL }}
          # - name: test-client
          #   path: ${{ env.CLIENT }}
          # - name: checksums
          #   path: ${{ env.CHECKSUMS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Build Artifacts pre test
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-2

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.path }}